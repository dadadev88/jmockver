name: Public NPM package
run-name: Publish NPM package from ${{ github.event.pull_request.base.ref }}

on:
  pull_request:
    types: [closed]
    branches: [develop, master]

jobs:
  build-publish:
    name: Build and publish NPM package
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Configure git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Publish RC version package (develop)
        if: github.event.pull_request.base.ref == 'develop'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          LOG_PREFIX: "[JMockver Action - RC]"
        run: |
          echo "$LOG_PREFIX Updating to RC version"
          npm version prerelease --preid rc -m "chore: RC package version updated to %s"

          echo "$LOG_PREFIX Packaging RC version and publish"
          npm run package
          npm publish --tag rc

          echo "$LOG_PREFIX Pushing RC version to develop"
          git push --follow-tags

      - name: Publish stable version package (master)
        if: github.event.pull_request.base.ref == 'master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          LOG_PREFIX: "[JMockver Action - Stable]"
        run: |
          echo "$LOG_PREFIX Generating stable version"

          CURRENT_VERSION=$(node -p "require('./package.json').version")
          STABLE_VERSION=$(echo $CURRENT_VERSION | sed 's/-rc\.[0-9]*$//')
          npm version $STABLE_VERSION -m "chore: STABLE package version updated to %s"

          echo "$LOG_PREFIX Packaging stable version $STABLE_VERSION and publish"
          npm run package
          npm publish

          echo "$LOG_PREFIX Pushing stable version to master"
          git push --follow-tags

          echo "$LOG_PREFIX Syncing stable version to develop"
          git checkout develop
          git merge master
          git push origin develop
